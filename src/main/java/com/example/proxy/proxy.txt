代理模式的核心思想是将目标对象的访问转移到代理对象上。
这样做的好处是目标对象在不改变代码的情况下，可以通过代理对象加一些额外的功能。
代理模式包括以下三个角色：
ISubject：接口对象，该接口是对象和它的代理对象共用的接口
TargetSubject：目标对象，是实现抽象主题接口的类
Proxy：代理角色，内部含有对目标对象TargetSubject的引用，从而可以操作真是的对象。
代理对象提供与目标对象相同的接口，以便在任何时刻都能代替目标对象。同时，代理对象可以
在执行目标对象操作时，附加其他操作，相当于对真实对象进行封装。

常见的代理模式有静态代理和动态代理，动态代理在java中的实现分为JDK动态代理和cglib（字节码）代理